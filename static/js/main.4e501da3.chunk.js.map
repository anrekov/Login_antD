{"version":3,"sources":["components/Login.js","components/Register.js","App.js","index.js"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","Login","Form","useForm","form","useState","forceUpdate","useEffect","msg","setMsg","passwordRegExp","className","to","width","name","initialValues","remember","onFinish","values","console","log","onFinishFailed","errorInfo","Item","label","rules","required","message","type","validator","_","value","match","Promise","resolve","reject","Error","Password","shouldUpdate","htmlType","disabled","isFieldsTouched","getFieldsError","filter","errors","length","email","password","Register","history","useHistory","phoneRegExp","random","Date","setTimeout","alert","push","min","map","elem","Option","uuidv4","placeholder","mask","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e501da3.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 9, // default: 8 / 16\n    span: 15,\n  },\n};\n\nconst Login = () => {\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState({});\n\n  // To disable submit button at the beginning.\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const [msg, setMsg] = useState(null);\n\n  const passwordRegExp = /(?=^.{6,}$)(?=.*[0-9])(?=.*[A-Z]).*/;\n\n  const onFinish = (values) => {\n    console.log('Success:', values);\n    setMsg(values);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <div className='login'>\n      <h2>Login</h2>\n      <Link to='/register'>Go to register</Link>\n      <hr width='400px' />\n      <br />\n\n      <Form\n        form={form}\n        {...layout}\n        name='basic'\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label='Email'\n          name='email'\n          rules={[\n            {\n              required: true,\n              message: 'Invalid email!',\n              type: 'email',\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label='Password'\n          name='password'\n          rules={[\n            {\n              required: true,\n              message: 'Invalid password!',\n              // pattern: passwordRegExp\n              validator(_, value) {\n                if (value.match(passwordRegExp)) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(new Error('Do not match!'));\n              },\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item {...tailLayout} shouldUpdate>\n          {() => (\n            <Button\n              type='primary'\n              htmlType='submit'\n              disabled={\n                !form.isFieldsTouched(true) ||\n                !!form.getFieldsError().filter(({ errors }) => errors.length)\n                  .length\n              }\n            >\n              Log in\n            </Button>\n          )}\n        </Form.Item>\n      </Form>\n\n      {msg && (\n        <div className='messageBox'>\n          <h3>{msg.email}</h3>\n          <h3>{msg.password}</h3>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Input, Button, Select } from 'antd';\nimport MaskedInput from 'react-text-mask';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 9, // default: 8 / 16\n    span: 15,\n  },\n};\n\nconst Register = () => {\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState({});\n\n  // To disable submit button at the beginning.\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const history = useHistory();\n\n  const countries = [\n    'Country1',\n    'Country2',\n    'Country3',\n    'Country4',\n    'Country5',\n    'Country6',\n    'Country7',\n    'Country7',\n    'Country8',\n    'Country9',\n    'Country10',\n    'Country11',\n    'Country12',\n    'Country13',\n    'Country14',\n    'Country15',\n  ];\n\n  const phoneRegExp = /^\\+?[78]\\s?[-\\\\(]?\\d{3}\\)?\\s?-?\\d{3}-?\\d{2}-?\\d{2}$/; // +7 (953) 092-93-17\n  const passwordRegExp = /(?=^.{6,}$)(?=.*[0-9])(?=.*[A-Z]).*/; // 6 символов, есть цифра, есть прописная буква\n\n  const onFinish = (values) => {\n    console.log('Success:', values);\n    const random = +new Date();\n\n    setTimeout(() => {\n      if (random % 2 === 0) {\n        alert('successful register');\n        history.push('/login');\n      } else {\n        alert('failed register');\n      }\n    }, 1000);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <div className='register'>\n      <h2>Register</h2>\n      <Link to='/login'>Go to login</Link>\n      <hr width='400px' />\n      <br />\n\n      <Form\n        form={form}\n        {...layout}\n        name='basic'\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label='Name'\n          name='name'\n          rules={[\n            {\n              required: true,\n              message: 'Invalid name!',\n              type: 'string',\n              min: 3,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label='Second Name'\n          name='secondName'\n          rules={[\n            {\n              required: true,\n              message: 'Invalid Second Name!',\n              type: 'string',\n              min: 3,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label='Email'\n          name='email'\n          rules={[\n            {\n              required: true,\n              message: 'Invalid email!',\n              type: 'email',\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label='Country'\n          name='country'\n          rules={[\n            {\n              required: true,\n              message: 'Please, select country',\n            },\n          ]}\n        >\n          <Select>\n            {countries.map((elem) => (\n              <Select.Option key={uuidv4()} value={elem}>\n                {elem}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          name='phone'\n          label='Phone Number'\n          rules={[\n            {\n              required: true,\n              message: 'Invalid phone number!',\n              validator(_, value) {\n                if (value.match(phoneRegExp)) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(new Error('Do not match!'));\n              },\n            },\n          ]}\n        >\n          <MaskedInput\n            className='ant-input'\n            type='text'\n            placeholder='+7 (956) 314-15-92'\n            mask={[\n              '+',\n              /7/,\n              ' ',\n              '(',\n              /[1-9]/,\n              /\\d/,\n              /\\d/,\n              ')',\n              ' ',\n              /\\d/,\n              /\\d/,\n              /\\d/,\n              '-',\n              /\\d/,\n              /\\d/,\n              '-',\n              /\\d/,\n              /\\d/,\n            ]}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label='Password'\n          name='password'\n          rules={[\n            {\n              required: true,\n              message: 'Invalid password!',\n              validator(_, value) {\n                if (value.match(passwordRegExp)) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(new Error('Do not match!'));\n              },\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item {...tailLayout} shouldUpdate>\n          {() => (\n            <Button\n              type='primary'\n              htmlType='submit'\n              disabled={\n                !form.isFieldsTouched(true) ||\n                !!form.getFieldsError().filter(({ errors }) => errors.length)\n                  .length\n              }\n            >\n              Register\n            </Button>\n          )}\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Register;\n","import './App.css';\nimport 'antd/dist/antd.css';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Login from './components/Login';\nimport Register from './components/Register';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/register' component={Register} />\n\n        <Redirect to='/login' />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}